/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vhci;

import java.awt.Dimension;
import java.awt.Event;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionListener;
import java.awt.event.MouseWheelEvent;
import java.awt.event.MouseWheelListener;
import java.awt.geom.AffineTransform;
import java.awt.image.BufferedImage;
import java.util.EventListener;
import java.util.EventObject;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JSlider;
import javax.swing.SwingUtilities;
import javax.swing.event.ChangeListener;
import javax.swing.event.MouseInputListener;
import org.jfree.data.category.DefaultCategoryDataset;
import org.joml.Matrix4f;
import org.joml.Vector2f;
import org.joml.Vector3f;
import org.joml.Vector4f;
import org.lwjgl.opengl.awt.AWTGLCanvas;
import org.lwjgl.opengl.awt.GLData;
import vhci.GL.GLEarthMesh;
import vhci.GL.GLEventClassListener;
import vhci.GL.GLRenderer;
import vhci.GL.GLSimulation;
import vhci.GL.GLTimerAnimation;
import vhci.GL.MousePicker.MousePicker;
import vhci.GL.MousePicker.MousePickerRay;
import vhci.GRACE.GRACEFileLoader;
import vhci.GRACE.GRACELoader;

/**
 *
 * @author rohdej
 */
public class MainWindow extends javax.swing.JFrame {
    private GRACEFileLoader grace;
    
    private boolean Mouse1Down = false;
        
    private boolean resetSliderFlag = false;

    private Vector2f GLPanelOffsetTopLeft = new Vector2f(  );
    /**
     * Creates new form MainWindow
     */
    public MainWindow(GRACEFileLoader grace) {
        initComponents();
        
        this.grace = grace;                
        this.gLCanvasPanel1.initCanvas(grace);
        
        jLabelDatum.setText(grace.getCurrentGraceData().date);
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldZoom = new javax.swing.JTextField();
        jButtonZoomIn = new javax.swing.JButton();
        jButtonZoomOut = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jSliderColoring = new javax.swing.JSlider();
        jButton2 = new javax.swing.JButton();
        jLabelDatum = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jSliderAnimationProgress = new javax.swing.JSlider();
        jButtonPlayAnimation = new javax.swing.JButton();
        jButtonPauseAnimation = new javax.swing.JButton();
        jButtonStopAnimation = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jTextFieldMaxColor = new javax.swing.JTextField();
        jTextFieldMinColor = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jTextFieldAnimationSpeed = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabelDatensatzNr = new javax.swing.JLabel();
        jTextFieldMinRange = new javax.swing.JTextField();
        jTextFieldMaxRange = new javax.swing.JTextField();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator6 = new javax.swing.JSeparator();
        jSeparator7 = new javax.swing.JSeparator();
        gLCanvasPanel1 = new vhci.GLCanvasPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1024, 768));
        addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                formMouseWheelMoved(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setPreferredSize(new java.awt.Dimension(1024, 100));

        jLabel3.setText("Zoom:");
        jPanel1.add(jLabel3);

        jTextFieldZoom.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldZoom.setText("100");
        jTextFieldZoom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldZoomKeyPressed(evt);
            }
        });
        jPanel1.add(jTextFieldZoom);

        jButtonZoomIn.setText("+");
        jButtonZoomIn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonZoomInMouseClicked(evt);
            }
        });
        jPanel1.add(jButtonZoomIn);

        jButtonZoomOut.setText("-");
        jButtonZoomOut.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonZoomOutMouseClicked(evt);
            }
        });
        jButtonZoomOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonZoomOutActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonZoomOut);

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel4.setPreferredSize(new java.awt.Dimension(125, 535));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setText("<");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 180, -1, -1));

        jSliderColoring.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderColoringStateChanged(evt);
            }
        });
        jSliderColoring.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                jSliderColoringCaretPositionChanged(evt);
            }
        });
        jPanel4.add(jSliderColoring, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 40, 180, -1));

        jButton2.setText(">");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 180, -1, -1));

        jLabelDatum.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabelDatum.setText("asd");
        jPanel4.add(jLabelDatum, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 180, 90, 18));

        jLabel4.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel4.setText("Coloring:");
        jPanel4.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 100, -1));

        jSliderAnimationProgress.setValue(0);
        jSliderAnimationProgress.setPreferredSize(new java.awt.Dimension(300, 25));
        jSliderAnimationProgress.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderAnimationProgressStateChanged(evt);
            }
        });
        jPanel4.add(jSliderAnimationProgress, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 300, 280, -1));

        jButtonPlayAnimation.setText("Play");
        jButtonPlayAnimation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPlayAnimationActionPerformed(evt);
            }
        });
        jPanel4.add(jButtonPlayAnimation, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 330, 70, -1));

        jButtonPauseAnimation.setText("Pause");
        jButtonPauseAnimation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPauseAnimationActionPerformed(evt);
            }
        });
        jPanel4.add(jButtonPauseAnimation, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 330, 70, -1));

        jButtonStopAnimation.setText("Stop");
        jButtonStopAnimation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonStopAnimationActionPerformed(evt);
            }
        });
        jPanel4.add(jButtonStopAnimation, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 330, 70, -1));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel2.setText("Animation");
        jPanel4.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, -1, -1));

        jLabel5.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel5.setText("Optionen");
        jPanel4.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jLabel6.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel6.setText("Datensatz");
        jPanel4.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, -1, -1));

        jLabel7.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel7.setText("Datum: ");
        jPanel4.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, -1, -1));

        jLabel9.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel9.setText("MinMaxColor:");
        jPanel4.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, -1, -1));

        jLabel10.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel10.setText("MinMaxRange:");
        jPanel4.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, -1, -1));

        jTextFieldMaxColor.setText("jTextField2");
        jTextFieldMaxColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldMaxColorActionPerformed(evt);
            }
        });
        jPanel4.add(jTextFieldMaxColor, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 70, 90, -1));

        jTextFieldMinColor.setText("jTextField2");
        jTextFieldMinColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldMinColorActionPerformed(evt);
            }
        });
        jPanel4.add(jTextFieldMinColor, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 70, 90, -1));

        jLabel11.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel11.setText("Speed:");
        jPanel4.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, -1, -1));

        jTextFieldAnimationSpeed.setText("jTextField5");
        jTextFieldAnimationSpeed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldAnimationSpeedActionPerformed(evt);
            }
        });
        jPanel4.add(jTextFieldAnimationSpeed, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 270, 90, -1));

        jLabel12.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel12.setText("Nr.: ");
        jPanel4.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, -1, -1));

        jLabelDatensatzNr.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabelDatensatzNr.setText("asd");
        jPanel4.add(jLabelDatensatzNr, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 200, 90, 18));

        jTextFieldMinRange.setText("jTextField2");
        jTextFieldMinRange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldMinRangeActionPerformed(evt);
            }
        });
        jPanel4.add(jTextFieldMinRange, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 100, 90, -1));

        jTextFieldMaxRange.setText("jTextField2");
        jTextFieldMaxRange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldMaxRangeActionPerformed(evt);
            }
        });
        jPanel4.add(jTextFieldMaxRange, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 100, 90, -1));
        jPanel4.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 280, 10));
        jPanel4.add(jSeparator6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 260, 280, 10));
        jPanel4.add(jSeparator7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 280, 10));

        javax.swing.GroupLayout gLCanvasPanel1Layout = new javax.swing.GroupLayout(gLCanvasPanel1);
        gLCanvasPanel1.setLayout(gLCanvasPanel1Layout);
        gLCanvasPanel1Layout.setHorizontalGroup(
            gLCanvasPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        gLCanvasPanel1Layout.setVerticalGroup(
            gLCanvasPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 682, Short.MAX_VALUE)
        );

        jMenu1.setText("Menue");

        jMenuItem1.setText("Exit");
        jMenuItem1.setToolTipText("");
        jMenuItem1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenuItem1MousePressed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 698, Short.MAX_VALUE)
                    .addComponent(gLCanvasPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gLCanvasPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        getAccessibleContext().setAccessibleName("MainWindow");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_formMouseWheelMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_formMouseWheelMoved

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButtonZoomInMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonZoomInMouseClicked
        jTextFieldZoom.setText("" + this.gLCanvasPanel1.Zoom(Integer.parseInt(jTextFieldZoom.getText())/5*5+5));
    }//GEN-LAST:event_jButtonZoomInMouseClicked

    private void jButtonZoomOutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonZoomOutMouseClicked
        jTextFieldZoom.setText("" + this.gLCanvasPanel1.Zoom(Integer.parseInt(jTextFieldZoom.getText())/5*5-5));
    }//GEN-LAST:event_jButtonZoomOutMouseClicked

    private void jMenuItem1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem1MousePressed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem1MousePressed

    private void jTextFieldZoomKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldZoomKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jTextFieldZoom.setText("" + this.gLCanvasPanel1.Zoom(Integer.parseInt(jTextFieldZoom.getText())));
        }
    }//GEN-LAST:event_jTextFieldZoomKeyPressed

    private void jButtonZoomOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonZoomOutActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonZoomOutActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        Vector2f MinMaxRange = this.gLCanvasPanel1.getMinMaxRange();
        Vector2f MinMaxColor = this.gLCanvasPanel1.getMinMaxColor();
        
        this.jTextFieldMinColor.setText("" + MinMaxColor.x);
        this.jTextFieldMaxColor.setText("" + MinMaxColor.y);
        
        this.jTextFieldMinRange.setText("" + MinMaxRange.x);
        this.jTextFieldMaxRange.setText("" + MinMaxRange.y);
        
        this.jTextFieldAnimationSpeed.setText("" + this.gLCanvasPanel1.getAnimationSpeed());
        this.jLabelDatensatzNr.setText(grace.getCurrentGRACEIndex() + "/" + grace.graceFileCount());
        this.jSliderColoring.setValue( (int)(this.gLCanvasPanel1.getColorFadingFactor() * this.jSliderColoring.getMaximum()) );
        
        this.gLCanvasPanel1.registerAnimationListener(new GLEventClassListener(){
            @Override
            public void handleEvent(EventObject e) {
                jLabelDatum.setText(grace.getCurrentGraceData().date);
                jLabelDatensatzNr.setText(grace.getCurrentGRACEIndex() + "/" + grace.graceFileCount());
                ChangeListener[] listeners = jSliderAnimationProgress.getListeners(ChangeListener.class);
                for( ChangeListener listener : listeners) jSliderAnimationProgress.removeChangeListener(listener);                
                jSliderAnimationProgress.setValue( (int)(((float)grace.getCurrentGRACEIndex() / (float)grace.graceFileCount()) * jSliderAnimationProgress.getMaximum()) );
                for( ChangeListener listener : listeners) jSliderAnimationProgress.addChangeListener(listener);      
            }
        });
    }//GEN-LAST:event_formWindowOpened

    private void jTextFieldMaxRangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldMaxRangeActionPerformed
        this.gLCanvasPanel1.setMaxRange(Float.parseFloat(this.jTextFieldMaxRange.getText()));
    }//GEN-LAST:event_jTextFieldMaxRangeActionPerformed

    private void jTextFieldMinRangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldMinRangeActionPerformed
        this.gLCanvasPanel1.setMinRange(Float.parseFloat(this.jTextFieldMinRange.getText()));
    }//GEN-LAST:event_jTextFieldMinRangeActionPerformed

    private void jTextFieldMinColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldMinColorActionPerformed
        this.gLCanvasPanel1.setMinColor(Float.parseFloat(this.jTextFieldMinColor.getText()));
    }//GEN-LAST:event_jTextFieldMinColorActionPerformed

    private void jTextFieldMaxColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldMaxColorActionPerformed
        this.gLCanvasPanel1.setMaxColor(Float.parseFloat(this.jTextFieldMaxColor.getText()));
    }//GEN-LAST:event_jTextFieldMaxColorActionPerformed

    private void jButtonStopAnimationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonStopAnimationActionPerformed
        this.gLCanvasPanel1.pauseAnimation();
        this.gLCanvasPanel1.setGraceDate(0);
        
        jLabelDatum.setText(grace.getCurrentGraceData().date);
        jLabelDatensatzNr.setText(grace.getCurrentGRACEIndex() + "/" + grace.graceFileCount());
        ChangeListener[] listeners = jSliderAnimationProgress.getListeners(ChangeListener.class);
        for( ChangeListener listener : listeners) jSliderAnimationProgress.removeChangeListener(listener);                
        jSliderAnimationProgress.setValue( (int)(((float)grace.getCurrentGRACEIndex() / (float)grace.graceFileCount()) * jSliderAnimationProgress.getMaximum()) );
        for( ChangeListener listener : listeners) jSliderAnimationProgress.addChangeListener(listener); 
    }//GEN-LAST:event_jButtonStopAnimationActionPerformed

    private void jButtonPauseAnimationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPauseAnimationActionPerformed
        this.gLCanvasPanel1.pauseAnimation();
    }//GEN-LAST:event_jButtonPauseAnimationActionPerformed

    private void jButtonPlayAnimationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPlayAnimationActionPerformed
        this.gLCanvasPanel1.startAnimation();
    }//GEN-LAST:event_jButtonPlayAnimationActionPerformed

    private void jSliderAnimationProgressStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderAnimationProgressStateChanged
        this.gLCanvasPanel1.pauseAnimation();
        this.gLCanvasPanel1.setGraceDate((int)((float)this.jSliderAnimationProgress.getValue() / (float)this.jSliderAnimationProgress.getMaximum() * grace.graceFileCount()) );
        
        jLabelDatum.setText(grace.getCurrentGraceData().date);
        jLabelDatensatzNr.setText(grace.getCurrentGRACEIndex() + "/" + grace.graceFileCount());
    }//GEN-LAST:event_jSliderAnimationProgressStateChanged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.gLCanvasPanel1.setNextGraceDate();
        jLabelDatum.setText(grace.getCurrentGraceData().date);
        jLabelDatensatzNr.setText(grace.getCurrentGRACEIndex() + "/" + grace.graceFileCount());
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.gLCanvasPanel1.setPreviousGraceDate();
        jLabelDatum.setText(grace.getCurrentGraceData().date);
        jLabelDatensatzNr.setText(grace.getCurrentGRACEIndex() + "/" + grace.graceFileCount());
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextFieldAnimationSpeedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldAnimationSpeedActionPerformed
        this.gLCanvasPanel1.setAnimationSpeed(Float.parseFloat(this.jTextFieldAnimationSpeed.getText()));
    }//GEN-LAST:event_jTextFieldAnimationSpeedActionPerformed

    private void jSliderColoringCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jSliderColoringCaretPositionChanged
        
    }//GEN-LAST:event_jSliderColoringCaretPositionChanged

    private void jSliderColoringStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderColoringStateChanged
        this.gLCanvasPanel1.setColorFadingFactor( (float)this.jSliderColoring.getValue() / (float)this.jSliderColoring.getMaximum());
    }//GEN-LAST:event_jSliderColoringStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup2;
    private vhci.GLCanvasPanel gLCanvasPanel1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButtonPauseAnimation;
    private javax.swing.JButton jButtonPlayAnimation;
    private javax.swing.JButton jButtonStopAnimation;
    private javax.swing.JButton jButtonZoomIn;
    private javax.swing.JButton jButtonZoomOut;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelDatensatzNr;
    private javax.swing.JLabel jLabelDatum;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSlider jSliderAnimationProgress;
    private javax.swing.JSlider jSliderColoring;
    private javax.swing.JTextField jTextFieldAnimationSpeed;
    private javax.swing.JTextField jTextFieldMaxColor;
    private javax.swing.JTextField jTextFieldMaxRange;
    private javax.swing.JTextField jTextFieldMinColor;
    private javax.swing.JTextField jTextFieldMinRange;
    private javax.swing.JTextField jTextFieldZoom;
    // End of variables declaration//GEN-END:variables
}
